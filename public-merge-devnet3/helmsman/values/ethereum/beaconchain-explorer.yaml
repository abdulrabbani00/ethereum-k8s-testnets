image:
  repository: parithoshj/beacon-explorer
  tag: merge_payload_fix
  pullPolicy: IfNotPresent

config:
  # ENV vars will be replaced using the 'init-config' init container
  chain:
    slotsPerEpoch: $SLOTS_PER_EPOCH
    secondsPerSlot: $SECONDS_PER_SLOT
    genesisTimestamp: $GENESIS_TIME
    minGenesisActiveValidatorCount: $MIN_GENESIS_ACTIVE_VALIDATOR_COUNT
  indexer:
    node:
      host: "lighthouse-geth-0.lighthouse-geth-headless.ethereum.svc.cluster.local"
      port: "5052"
      type: "lighthouse"
      pageSize: 500
    eth1Endpoint: http://dshackle:8545/eth
    eth1DepositContractAddress: $DEPOSIT_CONTRACT_ADDRESS
    eth1DepositContractFirstBlock: $ETH1_DEPOSIT_CONTRACT_BLOCK

customCommand:
  - ./explorer
  - --config
  - /config-update/config.yaml

extraVolumes:
  - name: config-update
    emptyDir: {}

extraVolumeMounts:
  - name: config-update
    mountPath: "/config-update"

initContainers:
  - name: init-config
    image: bash:latest
    imagePullPolicy: IfNotPresent
    securityContext:
      runAsNonRoot: false
      runAsUser: 0
    command:
    - bash
    - -ace
    - >
      apk add jq curl gettext;
      GENESIS_API_ENDPOINT=http://lighthouse-geth-0.lighthouse-geth-headless.ethereum.svc.cluster.local:5052/eth/v1/beacon/genesis;
      CONFIG_API_ENDPOINT=http://lighthouse-geth-0.lighthouse-geth-headless.ethereum.svc.cluster.local:5052/eth/v1/config/spec;
      GENESIS_DEPLOY_BLOCK_URL=https://config.devnet3.themerge.dev/cl/genesis/deploy_block.txt;
      export ETH1_DEPOSIT_CONTRACT_BLOCK=$(curl -s $GENESIS_DEPLOY_BLOCK_URL);
      echo "waiting to fetch beacon info from $GENESIS_API_ENDPOINT";
      while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' $GENESIS_API_ENDPOINT)" != "200" ]]; do sleep 5; done;
      export GENESIS_TIME=$(curl -s $GENESIS_API_ENDPOINT | jq -r '.data.genesis_time');
      curl -s $CONFIG_API_ENDPOINT > config_spec.yaml;
      export DEPOSIT_CONTRACT_ADDRESS=$(cat config_spec.yaml | jq '.data.DEPOSIT_CONTRACT_ADDRESS' );
      export MIN_GENESIS_ACTIVE_VALIDATOR_COUNT=$(cat config_spec.yaml | jq -r '.data.MIN_GENESIS_ACTIVE_VALIDATOR_COUNT' );
      export SECONDS_PER_SLOT=$(cat config_spec.yaml | jq -r '.data.SECONDS_PER_SLOT' );
      export SLOTS_PER_EPOCH=$(cat config_spec.yaml | jq -r '.data.SLOTS_PER_EPOCH' );
      echo "got genesis time: $GENESIS_TIME";
      envsubst < /config.yaml > /config-update/config.yaml;
      cat /config.yaml;
      echo "========";
      cat /config-update/config.yaml;
    volumeMounts:
      - name: config-update
        mountPath: /config-update
      - name: config
        mountPath: "/config.yaml"
        subPath: config.yaml
        readOnly: true

postgresql:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: true
  persistence:
    enabled: true
    size: 400Gi
    storageClass: "local-path"
  initdbScripts:
    init_01.sql: |
      CREATE DATABASE explorer;
    init_02_db.sh: |
      #!/bin/sh
      curl https://raw.githubusercontent.com/protolambda/eth2-beaconchain-explorer/merge/tables.sql -o /tmp/tables.sql
      PGPASSWORD=postgres psql -U postgres -h 127.0.0.1 -d explorer -f /tmp/tables.sql
      rm /tmp/tables.sql
